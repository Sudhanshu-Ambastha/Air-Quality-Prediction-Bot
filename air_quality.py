# -*- coding: utf-8 -*-
"""air quality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11nPALjv3fASQHv-UezAbML1Bi26gA72z
"""

import numpy as np
import seaborn as sns
import pandas as pd

df = pd.read_csv('/content/city_day.csv',na_values='=')
df.shape

df.info()

df.isnull().sum()

df.head(6)

df.columns

data2=df.copy()

data2=data2.fillna(data2.mean())

data2.head()

data2.info()

dist=(data2['City'])
distset=set(dist)
dd=list(distset)
dict0fwords={dd[i]:i for i in range(0,len(dd))}
data2['City']=data2['City'].map(dict0fwords)

dist=(data2['AQI_Bucket'])
distset=set(dist)
dd=list(distset)
dictofwords={dd[i] : i for i in range(0,len(dd))}
data2['AQI_Bucket']=data2["AQI_Bucket"].map(dictofwords)

data2["AQI_Bucket"]=data2["AQI_Bucket"].fillna(data2['AQI_Bucket'].mean())

data2

data2.isnull().sum()

data2=data2.drop('Date',1)

data2.columns

data2=data2.drop('AQI_Bucket',1)

import plotly.express as px

fig1=px.scatter(df,x="City", y="AQI")

fig1 .show()

import plotly.express as px

fig2 = px.scatter(df,x="PM10",y="AQI")

fig2.show()

data2.columns

import plotly.express as px

fig3= px. scatter(df,x="NO",y= "AQI")

fig3.show()

import plotly .express as px

fig4=px.scatter(df,x="NO" , y= "AQI")

fig4.show()

import plotly .express as px

fig5=px.scatter(df,x="NO" , y= "AQI")

fig5.show()

data2.columns

import plotly .express as px

fig6=px.scatter(df,x="NH3" , y= "AQI")

fig6.show()

import plotly .express as px

fig7=px.scatter(df,x="CO" , y= "AQI")

fig7.show()

import plotly .express  as px

fig8=px.scatter(df,x="SO2" , y= "AQI")

fig8.show()

data2.columns

import plotly .express as px

fig9 =px.scatter(df,x="O3" , y= "AQI")

fig9.show()

import plotly .express as px

fig10=px.scatter(df,x="Benzene" , y= "AQI")

fig10.show()

data2.columns

import plotly .express as px

fig11=px.scatter(df,x="Toluene" , y= "AQI")

fig11.show()

import plotly .express as  px

fig12=px.scatter(df,x="Xylene" , y= "AQI")

fig12.show()

data2.info()

data2.columns

features=data2[['City','PM2.5','PM10','NO','NO2','NOx','NH3','CO','SO2','O3','Benzene','Toluene','Xylene']]

labels=data2['AQI']

#Splitting into train and test data

from sklearn.model_selection import train_test_split
Xtrain,Xtest,Ytrain,Ytest= train_test_split(features,labels,test_size=0.2,random_state=2)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import classification_report
from sklearn import tree

from sklearn.ensemble import RandomForestRegressor
from sklearn.datasets import make_regression
#x, y =make_regression(n_fetures=4, n_informative=2,random_state=0, shuffle=False)
regr = RandomForestRegressor(max_depth=2, random_state=0)
regr.fit(Xtrain,Ytrain)
print(regr.predict(Xtest))

y_pred=regr.predict(Xtest)

from sklearn.metrics import r2_score

r2_score(Ytest,y_pred)